{"version":3,"sources":["/source/ngchart_directive_renderers.coffee","ngchart_directive_renderers.min.js"],"names":["callWithJQuery","pivotModule","exports","module","require","define","amd","jQuery","$","makeGoogleChart","chartType","extraOptions","pivotData","opts","agg","base","base1","colKey","colKeys","dataArray","dataTable","defaults","fullAggName","groupByTitle","h","hAxisTitle","headers","i","j","len","len1","numCharsInHAxis","options","ref","result","row","rowKey","rowKeys","title","tree2","vAxisTitle","val","x","y","localeStrings","vs","by","gchart","extend","width","window","innerWidth","height","innerHeight","getRowKeys","length","push","getColKeys","aggregatorName","valAttrs","join","results","unshift","tree","parseFloat","format","value","google","visualization","DataTable","addColumn","colAttrs","rowAttrs","type","role","addRows","getAggregator","isNumeric","toPrecision","toFixed","arrayToDataTable","hAxis","slantedText","vAxis","tooltip","textStyle","fontName","fontSize","minValue","legend","position","chartArea","html","isDirective","chart","data","pivotUtilities","ngchart_directive_renderers","Line Chart","Bar Chart","Stacked Bar Chart","isStacked","Area Chart","Scatter Chart","call","this"],"mappings":"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","file":"ngchart_directive_renderers.min.js","sourcesContent":["callWithJQuery = (pivotModule) ->\n    if typeof exports is \"object\" and typeof module is \"object\" # CommonJS\n        pivotModule require(\"jquery\")\n    else if typeof define is \"function\" and define.amd # AMD\n        define [\"jquery\"], pivotModule\n    # Plain browser env\n    else\n        pivotModule jQuery\n        \ncallWithJQuery ($) ->\n\n    makeGoogleChart = (chartType, extraOptions) -> (pivotData, opts) ->\n        defaults =\n            localeStrings:\n                vs: \"vs\"\n                by: \"by\"\n            gchart: {}\n\n        opts = $.extend true, defaults, opts\n        opts.gchart.width ?= window.innerWidth / 1.4\n        opts.gchart.height ?= window.innerHeight / 1.4\n\n        rowKeys = pivotData.getRowKeys()\n        rowKeys.push [] if rowKeys.length == 0\n        colKeys = pivotData.getColKeys()\n        colKeys.push [] if colKeys.length == 0\n        fullAggName = pivotData.aggregatorName \n        if pivotData.valAttrs.length\n            fullAggName += \"(#{pivotData.valAttrs.join(\", \")})\"\n        headers = (h.join(\"-\") for h in rowKeys)\n        headers.unshift \"\"\n\n        numCharsInHAxis = 0\n        if chartType == \"ScatterChart\"\n            dataArray = []\n            for y, tree2 of pivotData.tree\n                for x, agg of tree2\n                     dataArray.push [\n                        parseFloat(x),\n                        parseFloat(y),\n                        fullAggName+\": \\n\"+agg.format(agg.value())\n                        ]\n            dataTable = new google.visualization.DataTable()\n            dataTable.addColumn 'number', pivotData.colAttrs.join(\"-\")\n            dataTable.addColumn 'number', pivotData.rowAttrs.join(\"-\") \n            dataTable.addColumn type: \"string\", role: \"tooltip\"\n            dataTable.addRows dataArray\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\n            vAxisTitle = pivotData.rowAttrs.join(\"-\")\n            title = \"\"\n        else\n            dataArray = [headers]\n            for colKey in colKeys\n                row = [colKey.join(\"-\")]\n                numCharsInHAxis += row[0].length\n                for rowKey in rowKeys\n                    agg = pivotData.getAggregator(rowKey, colKey)\n                    if agg.value()?\n                        val = agg.value()\n                        if $.isNumeric val\n                            if val < 1\n                                row.push parseFloat(val.toPrecision(3))\n                            else\n                                row.push parseFloat(val.toFixed(3))\n                        else\n                            row.push val\n                    else row.push null\n                dataArray.push row\n\n            dataTable = google.visualization.arrayToDataTable(dataArray)\n\n            title = vAxisTitle = fullAggName\n            hAxisTitle = pivotData.colAttrs.join(\"-\")\n            title += \" #{opts.localeStrings.vs} #{hAxisTitle}\" if hAxisTitle != \"\"\n            groupByTitle = pivotData.rowAttrs.join(\"-\")\n            title += \" #{opts.localeStrings.by} #{groupByTitle}\" if groupByTitle != \"\"\n\n        options = \n            title: title\n            hAxis: {title: hAxisTitle, slantedText: numCharsInHAxis > 50}\n            vAxis: {title: vAxisTitle}\n            tooltip: { textStyle: { fontName: 'Arial', fontSize: 12 } }\n\n        if chartType == \"ColumnChart\"\n            options.vAxis.minValue = 0\n\n        if chartType == \"ScatterChart\"\n            options.legend = position: \"none\"\n            options.chartArea = {'width': '80%', 'height': '80%'}\n\n        else if dataArray[0].length == 2 and dataArray[0][1] ==  \"\"\n            options.legend = position: \"none\"\n        \n        $.extend options, opts.gchart, extraOptions\n\n        result =\n            html: '<div google-chart chart=\\'chartData\\'>'\n            isDirective: true\n            chart:\n                data: dataArray\n                options: options\n                type: chartType\n        return result\n\n    $.pivotUtilities.ngchart_directive_renderers = \n        \"Line Chart\": makeGoogleChart(\"LineChart\")\n        \"Bar Chart\": makeGoogleChart(\"ColumnChart\")\n        \"Stacked Bar Chart\": makeGoogleChart(\"ColumnChart\", isStacked: true)\n        \"Area Chart\": makeGoogleChart(\"AreaChart\", isStacked: true)\n        \"Scatter Chart\": makeGoogleChart(\"ScatterChart\")\n","(function(){var t;(t=function(t){return\"object\"==typeof exports&&\"object\"==typeof module?t(require(\"jquery\")):\"function\"==typeof define&&define.amd?define([\"jquery\"],t):t(jQuery)})(function(t){var e;return e=function(e,r){return function(n,a){var o,i,l,h,s,u,g,c,d,p,f,C,v,m,A,y,j,w,S,b,x,F,D,T,k,q,z,N,B,K;if(c={localeStrings:{vs:\"vs\",by:\"by\"},gchart:{}},a=t.extend(!0,c,a),null==(i=a.gchart).width&&(i.width=window.innerWidth/1.4),null==(l=a.gchart).height&&(l.height=window.innerHeight/1.4),T=n.getRowKeys(),0===T.length&&T.push([]),s=n.getColKeys(),0===s.length&&s.push([]),d=n.aggregatorName,n.valAttrs.length&&(d+=\"(\"+n.valAttrs.join(\", \")+\")\"),v=function(){var t,e,r;for(r=[],t=0,e=T.length;e>t;t++)f=T[t],r.push(f.join(\"-\"));return r}(),v.unshift(\"\"),w=0,\"ScatterChart\"===e){u=[],b=n.tree;for(K in b){q=b[K];for(B in q)o=q[B],u.push([parseFloat(B),parseFloat(K),d+\": \\n\"+o.format(o.value())])}g=new google.visualization.DataTable,g.addColumn(\"number\",n.colAttrs.join(\"-\")),g.addColumn(\"number\",n.rowAttrs.join(\"-\")),g.addColumn({type:\"string\",role:\"tooltip\"}),g.addRows(u),C=n.colAttrs.join(\"-\"),z=n.rowAttrs.join(\"-\"),k=\"\"}else{for(u=[v],m=0,y=s.length;y>m;m++){for(h=s[m],F=[h.join(\"-\")],w+=F[0].length,A=0,j=T.length;j>A;A++)D=T[A],o=n.getAggregator(D,h),null!=o.value()?(N=o.value(),t.isNumeric(N)?1>N?F.push(parseFloat(N.toPrecision(3))):F.push(parseFloat(N.toFixed(3))):F.push(N)):F.push(null);u.push(F)}g=google.visualization.arrayToDataTable(u),k=z=d,C=n.colAttrs.join(\"-\"),\"\"!==C&&(k+=\" \"+a.localeStrings.vs+\" \"+C),p=n.rowAttrs.join(\"-\"),\"\"!==p&&(k+=\" \"+a.localeStrings.by+\" \"+p)}return S={title:k,hAxis:{title:C,slantedText:w>50},vAxis:{title:z},tooltip:{textStyle:{fontName:\"Arial\",fontSize:12}}},\"ColumnChart\"===e&&(S.vAxis.minValue=0),\"ScatterChart\"===e?(S.legend={position:\"none\"},S.chartArea={width:\"80%\",height:\"80%\"}):2===u[0].length&&\"\"===u[0][1]&&(S.legend={position:\"none\"}),t.extend(S,a.gchart,r),x={html:\"<div google-chart chart='chartData'>\",isDirective:!0,chart:{data:u,options:S,type:e}}}},t.pivotUtilities.gchart_renderers={\"Line Chart\":e(\"LineChart\"),\"Bar Chart\":e(\"ColumnChart\"),\"Stacked Bar Chart\":e(\"ColumnChart\",{isStacked:!0}),\"Area Chart\":e(\"AreaChart\",{isStacked:!0}),\"Scatter Chart\":e(\"ScatterChart\")}})}).call(this);\n//# sourceMappingURL=ngchart_directive_renderers.min.js.map"],"sourceRoot":"/source/"}